package BreweryDB_APIs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import BeerRecipe.Fermentables;
import BeerRecipe.Hops;

public class FermentablesAPI {
	
	   public static List<Fermentables> getFermentablesAPI(){
		   
		   String urlToRead = "http://api.brewerydb.com/v2/fermentables?key=cc0090d9b6bfb3ff92bcb9cdaa15a599";
		   
		   List<Fermentables> fermList = new ArrayList<Fermentables>();
		   
			try {
				
				StringBuilder result = new StringBuilder();
				
				URL url = new URL(urlToRead);
				
				HttpURLConnection conn = (HttpURLConnection) url.openConnection();
				conn.setRequestMethod("GET");
				BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
				
				String line;
				
				while ((line = rd.readLine()) != null) {
					
					result.append(line);
				}
				rd.close();
				
				String JSON_DATA = result.toString();
				
				JSONObject obj = new JSONObject(JSON_DATA);
				JSONArray geodata = obj.getJSONArray("data");
				int n = geodata.length();
							
				for (int i = 0; i < n; ++i) {
					
					Fermentables addFermentables = new Fermentables();
					
					final JSONObject JasonFerment = geodata.getJSONObject(i);
					
					int fermpID = JasonFerment.getInt("id"); 
					
					String fermName = JasonFerment.getString("name");
					
					String fermCategory =  JasonFerment.getString("category");
					
					String fermCatagryDisplay = JasonFerment.getString("categoryDisplay");
					
					String fermDescription = null;
					
					if (JasonFerment.has("description")){
						
						fermDescription =JasonFerment.getString("description");
						
					}
					
					String fermCharID = null;
					
					String fermCharName = null;
					
					String fermCharDescription = null;
					
					
					if (JasonFerment.has("characteristics")){
						
						fermCharID = JasonFerment.getJSONObject("data").getJSONObject("characteristics").getString("id");
						
						System.out.println(fermCharID);
						
						fermCharName = JasonFerment.getJSONObject("characteristics").getString("name"); 
						
						fermCharDescription = JasonFerment.getJSONObject("characteristics").getString("description");
					}	 
					
					String fermCounryIsoCode = null;
					
					String fermCounryName = null;
					
					if (JasonFerment.has("country")){
											
						fermCounryIsoCode = JasonFerment.getJSONObject("country").getString("isoCode");
						
						fermCounryName = JasonFerment.getJSONObject("country").getString("displayName");

					}				
					
					addFermentables.setFermCharID(fermCharID);
					addFermentables.setFermCharName(fermName);
					addFermentables.setCatagory(fermCategory);;
					addFermentables.setCategoryDisplay(fermCatagryDisplay);
					addFermentables.setDescription(fermDescription);
					
					addFermentables.setFermCharID(fermCharID);
					addFermentables.setFermCharName(fermCharName);
					addFermentables.setFermCharDescription(fermCharDescription);
					
					addFermentables.setCountryisoCode(fermCounryIsoCode);
					addFermentables.setCountryName(fermCounryName);

					
					fermList.add(addFermentables);
					
				}
		      
		      
			} catch (MalformedURLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}	
			
			return fermList;
			
	   }

}
